/*
 * generated by Xtext 2.25.0
 */
package event.driven.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SceneDlGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class SceneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "event.driven.SceneDl.Scene");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cElementsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cElementsElementParserRuleCall_1_0 = (RuleCall)cElementsAssignment_1.eContents().get(0);
		
		//Scene:
		//    name=ID
		//    (elements+=Element)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		//(elements+=Element)*
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//(elements+=Element)*
		public Assignment getElementsAssignment_1() { return cElementsAssignment_1; }
		
		//Element
		public RuleCall getElementsElementParserRuleCall_1_0() { return cElementsElementParserRuleCall_1_0; }
	}
	public class ElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "event.driven.SceneDl.Element");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStaticEntityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDynamicEntityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Element:
		//    StaticEntity | DynamicEntity
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//StaticEntity | DynamicEntity
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StaticEntity
		public RuleCall getStaticEntityParserRuleCall_0() { return cStaticEntityParserRuleCall_0; }
		
		//DynamicEntity
		public RuleCall getDynamicEntityParserRuleCall_1() { return cDynamicEntityParserRuleCall_1; }
	}
	public class StaticEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "event.driven.SceneDl.StaticEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeStatic_entityKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cKeyKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cKeyAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cKeyAttributeCrossReference_2_1_0 = (CrossReference)cKeyAssignment_2_1.eContents().get(0);
		private final RuleCall cKeyAttributeIDTerminalRuleCall_2_1_0_1 = (RuleCall)cKeyAttributeCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIsAKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIsAAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cIsAElementCrossReference_3_1_0 = (CrossReference)cIsAAssignment_3_1.eContents().get(0);
		private final RuleCall cIsAElementIDTerminalRuleCall_3_1_0_1 = (RuleCall)cIsAElementCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cGroup_4.eContents().get(1);
		private final Assignment cAttributesAssignment_4_1_0 = (Assignment)cAlternatives_4_1.eContents().get(0);
		private final RuleCall cAttributesAttributeParserRuleCall_4_1_0_0 = (RuleCall)cAttributesAssignment_4_1_0.eContents().get(0);
		private final Assignment cFeaturesAssignment_4_1_1 = (Assignment)cAlternatives_4_1.eContents().get(1);
		private final CrossReference cFeaturesDynamicEntityCrossReference_4_1_1_0 = (CrossReference)cFeaturesAssignment_4_1_1.eContents().get(0);
		private final RuleCall cFeaturesDynamicEntityIDTerminalRuleCall_4_1_1_0_1 = (RuleCall)cFeaturesDynamicEntityCrossReference_4_1_1_0.eContents().get(1);
		private final Alternatives cAlternatives_4_2 = (Alternatives)cGroup_4.eContents().get(2);
		private final Group cGroup_4_2_0 = (Group)cAlternatives_4_2.eContents().get(0);
		private final Keyword cCommaKeyword_4_2_0_0 = (Keyword)cGroup_4_2_0.eContents().get(0);
		private final Assignment cAttributesAssignment_4_2_0_1 = (Assignment)cGroup_4_2_0.eContents().get(1);
		private final RuleCall cAttributesAttributeParserRuleCall_4_2_0_1_0 = (RuleCall)cAttributesAssignment_4_2_0_1.eContents().get(0);
		private final Group cGroup_4_2_1 = (Group)cAlternatives_4_2.eContents().get(1);
		private final Keyword cCommaKeyword_4_2_1_0 = (Keyword)cGroup_4_2_1.eContents().get(0);
		private final Assignment cFeaturesAssignment_4_2_1_1 = (Assignment)cGroup_4_2_1.eContents().get(1);
		private final CrossReference cFeaturesDynamicEntityCrossReference_4_2_1_1_0 = (CrossReference)cFeaturesAssignment_4_2_1_1.eContents().get(0);
		private final RuleCall cFeaturesDynamicEntityIDTerminalRuleCall_4_2_1_1_0_1 = (RuleCall)cFeaturesDynamicEntityCrossReference_4_2_1_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//StaticEntity:
		//    type = 'static_entity' name=ID ('key' key=[Attribute])? ('isA' isA+=[Element])*
		//    ('{'
		//    (attributes+=Attribute | features+=[DynamicEntity] )
		//    (',' attributes+=Attribute | ',' features+=[DynamicEntity] )*
		//    '}')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type = 'static_entity' name=ID ('key' key=[Attribute])? ('isA' isA+=[Element])*
		//('{'
		//(attributes+=Attribute | features+=[DynamicEntity] )
		//(',' attributes+=Attribute | ',' features+=[DynamicEntity] )*
		//'}')?
		public Group getGroup() { return cGroup; }
		
		//type = 'static_entity'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'static_entity'
		public Keyword getTypeStatic_entityKeyword_0_0() { return cTypeStatic_entityKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('key' key=[Attribute])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'key'
		public Keyword getKeyKeyword_2_0() { return cKeyKeyword_2_0; }
		
		//key=[Attribute]
		public Assignment getKeyAssignment_2_1() { return cKeyAssignment_2_1; }
		
		//[Attribute]
		public CrossReference getKeyAttributeCrossReference_2_1_0() { return cKeyAttributeCrossReference_2_1_0; }
		
		//ID
		public RuleCall getKeyAttributeIDTerminalRuleCall_2_1_0_1() { return cKeyAttributeIDTerminalRuleCall_2_1_0_1; }
		
		//('isA' isA+=[Element])*
		public Group getGroup_3() { return cGroup_3; }
		
		//'isA'
		public Keyword getIsAKeyword_3_0() { return cIsAKeyword_3_0; }
		
		//isA+=[Element]
		public Assignment getIsAAssignment_3_1() { return cIsAAssignment_3_1; }
		
		//[Element]
		public CrossReference getIsAElementCrossReference_3_1_0() { return cIsAElementCrossReference_3_1_0; }
		
		//ID
		public RuleCall getIsAElementIDTerminalRuleCall_3_1_0_1() { return cIsAElementIDTerminalRuleCall_3_1_0_1; }
		
		//('{'
		//(attributes+=Attribute | features+=[DynamicEntity] )
		//(',' attributes+=Attribute | ',' features+=[DynamicEntity] )*
		//'}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }
		
		//(attributes+=Attribute | features+=[DynamicEntity] )
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_4_1_0() { return cAttributesAssignment_4_1_0; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_4_1_0_0() { return cAttributesAttributeParserRuleCall_4_1_0_0; }
		
		//features+=[DynamicEntity]
		public Assignment getFeaturesAssignment_4_1_1() { return cFeaturesAssignment_4_1_1; }
		
		//[DynamicEntity]
		public CrossReference getFeaturesDynamicEntityCrossReference_4_1_1_0() { return cFeaturesDynamicEntityCrossReference_4_1_1_0; }
		
		//ID
		public RuleCall getFeaturesDynamicEntityIDTerminalRuleCall_4_1_1_0_1() { return cFeaturesDynamicEntityIDTerminalRuleCall_4_1_1_0_1; }
		
		//(',' attributes+=Attribute | ',' features+=[DynamicEntity] )*
		public Alternatives getAlternatives_4_2() { return cAlternatives_4_2; }
		
		//',' attributes+=Attribute
		public Group getGroup_4_2_0() { return cGroup_4_2_0; }
		
		//','
		public Keyword getCommaKeyword_4_2_0_0() { return cCommaKeyword_4_2_0_0; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_4_2_0_1() { return cAttributesAssignment_4_2_0_1; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_4_2_0_1_0() { return cAttributesAttributeParserRuleCall_4_2_0_1_0; }
		
		//',' features+=[DynamicEntity]
		public Group getGroup_4_2_1() { return cGroup_4_2_1; }
		
		//','
		public Keyword getCommaKeyword_4_2_1_0() { return cCommaKeyword_4_2_1_0; }
		
		//features+=[DynamicEntity]
		public Assignment getFeaturesAssignment_4_2_1_1() { return cFeaturesAssignment_4_2_1_1; }
		
		//[DynamicEntity]
		public CrossReference getFeaturesDynamicEntityCrossReference_4_2_1_1_0() { return cFeaturesDynamicEntityCrossReference_4_2_1_1_0; }
		
		//ID
		public RuleCall getFeaturesDynamicEntityIDTerminalRuleCall_4_2_1_1_0_1() { return cFeaturesDynamicEntityIDTerminalRuleCall_4_2_1_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
	}
	public class DynamicEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "event.driven.SceneDl.DynamicEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeDynamic_entityKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cKeyKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cKeyAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cKeyAttributeCrossReference_2_1_0 = (CrossReference)cKeyAssignment_2_1.eContents().get(0);
		private final RuleCall cKeyAttributeIDTerminalRuleCall_2_1_0_1 = (RuleCall)cKeyAttributeCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIsAKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIsAAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cIsAElementCrossReference_3_1_0 = (CrossReference)cIsAAssignment_3_1.eContents().get(0);
		private final RuleCall cIsAElementIDTerminalRuleCall_3_1_0_1 = (RuleCall)cIsAElementCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributesAttributeParserRuleCall_4_1_0 = (RuleCall)cAttributesAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cAttributesAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cAttributesAttributeParserRuleCall_4_2_1_0 = (RuleCall)cAttributesAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//DynamicEntity:
		//    type = 'dynamic_entity' name=ID ('key' key=[Attribute])? ('isA' isA+=[Element])*
		//    ('{'
		//    (attributes+=Attribute )
		//    (',' attributes+=Attribute)*
		//    '}')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type = 'dynamic_entity' name=ID ('key' key=[Attribute])? ('isA' isA+=[Element])*
		//('{'
		//(attributes+=Attribute )
		//(',' attributes+=Attribute)*
		//'}')?
		public Group getGroup() { return cGroup; }
		
		//type = 'dynamic_entity'
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//'dynamic_entity'
		public Keyword getTypeDynamic_entityKeyword_0_0() { return cTypeDynamic_entityKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('key' key=[Attribute])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'key'
		public Keyword getKeyKeyword_2_0() { return cKeyKeyword_2_0; }
		
		//key=[Attribute]
		public Assignment getKeyAssignment_2_1() { return cKeyAssignment_2_1; }
		
		//[Attribute]
		public CrossReference getKeyAttributeCrossReference_2_1_0() { return cKeyAttributeCrossReference_2_1_0; }
		
		//ID
		public RuleCall getKeyAttributeIDTerminalRuleCall_2_1_0_1() { return cKeyAttributeIDTerminalRuleCall_2_1_0_1; }
		
		//('isA' isA+=[Element])*
		public Group getGroup_3() { return cGroup_3; }
		
		//'isA'
		public Keyword getIsAKeyword_3_0() { return cIsAKeyword_3_0; }
		
		//isA+=[Element]
		public Assignment getIsAAssignment_3_1() { return cIsAAssignment_3_1; }
		
		//[Element]
		public CrossReference getIsAElementCrossReference_3_1_0() { return cIsAElementCrossReference_3_1_0; }
		
		//ID
		public RuleCall getIsAElementIDTerminalRuleCall_3_1_0_1() { return cIsAElementIDTerminalRuleCall_3_1_0_1; }
		
		//('{'
		//(attributes+=Attribute )
		//(',' attributes+=Attribute)*
		//'}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }
		
		//(attributes+=Attribute )
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_4_1_0() { return cAttributesAttributeParserRuleCall_4_1_0; }
		
		//(',' attributes+=Attribute)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_4_2_1() { return cAttributesAssignment_4_2_1; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_4_2_1_0() { return cAttributesAttributeParserRuleCall_4_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "event.driven.SceneDl.Attribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRegularAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPositionAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Attribute:
		//    RegularAttribute | PositionAttribute
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RegularAttribute | PositionAttribute
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RegularAttribute
		public RuleCall getRegularAttributeParserRuleCall_0() { return cRegularAttributeParserRuleCall_0; }
		
		//PositionAttribute
		public RuleCall getPositionAttributeParserRuleCall_1() { return cPositionAttributeParserRuleCall_1; }
	}
	public class RegularAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "event.driven.SceneDl.RegularAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeAttributeTypeEnumRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueAttributeValueParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cHyphenMinusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cValueAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cValueAttributeValueParserRuleCall_5_1_0 = (RuleCall)cValueAssignment_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cIsTransientAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cIsTransientTransientKeyword_7_0 = (Keyword)cIsTransientAssignment_7.eContents().get(0);
		
		//RegularAttribute:
		//    name=ID ':'  type = (AttributeType)  ('[')? (value += AttributeValue) ('-' value += AttributeValue)? (']')? (isTransient?='transient')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':'  type = (AttributeType)  ('[')? (value += AttributeValue) ('-' value += AttributeValue)? (']')? (isTransient?='transient')?
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type = (AttributeType)
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//(AttributeType)
		public RuleCall getTypeAttributeTypeEnumRuleCall_2_0() { return cTypeAttributeTypeEnumRuleCall_2_0; }
		
		//('[')?
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//(value += AttributeValue)
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }
		
		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_4_0() { return cValueAttributeValueParserRuleCall_4_0; }
		
		//('-' value += AttributeValue)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_5_0() { return cHyphenMinusKeyword_5_0; }
		
		//value += AttributeValue
		public Assignment getValueAssignment_5_1() { return cValueAssignment_5_1; }
		
		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_5_1_0() { return cValueAttributeValueParserRuleCall_5_1_0; }
		
		//(']')?
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }
		
		//(isTransient?='transient')?
		public Assignment getIsTransientAssignment_7() { return cIsTransientAssignment_7; }
		
		//'transient'
		public Keyword getIsTransientTransientKeyword_7_0() { return cIsTransientTransientKeyword_7_0; }
	}
	public class PositionAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "event.driven.SceneDl.PositionAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeAttributeTypeEnumRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cXAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cXINTTerminalRuleCall_4_0 = (RuleCall)cXAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cYAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cYINTTerminalRuleCall_6_0 = (RuleCall)cYAssignment_6.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cIsTransientAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final Keyword cIsTransientTransientKeyword_8_0 = (Keyword)cIsTransientAssignment_8.eContents().get(0);
		
		//PositionAttribute:
		//    name=ID ':'  type = (AttributeType) '['x = (INT) ';' y = (INT)']'  (isTransient?='transient')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':'  type = (AttributeType) '['x = (INT) ';' y = (INT)']'  (isTransient?='transient')?
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type = (AttributeType)
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//(AttributeType)
		public RuleCall getTypeAttributeTypeEnumRuleCall_2_0() { return cTypeAttributeTypeEnumRuleCall_2_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//x = (INT)
		public Assignment getXAssignment_4() { return cXAssignment_4; }
		
		//(INT)
		public RuleCall getXINTTerminalRuleCall_4_0() { return cXINTTerminalRuleCall_4_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
		
		//y = (INT)
		public Assignment getYAssignment_6() { return cYAssignment_6; }
		
		//(INT)
		public RuleCall getYINTTerminalRuleCall_6_0() { return cYINTTerminalRuleCall_6_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }
		
		//(isTransient?='transient')?
		public Assignment getIsTransientAssignment_8() { return cIsTransientAssignment_8; }
		
		//'transient'
		public Keyword getIsTransientTransientKeyword_8_0() { return cIsTransientTransientKeyword_8_0; }
	}
	public class AttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "event.driven.SceneDl.AttributeValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Keyword cFullStopKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		
		//AttributeValue:
		//    INT | STRING | INT'.'INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//INT | STRING | INT'.'INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1() { return cSTRINGTerminalRuleCall_1; }
		
		//INT'.'INT
		public Group getGroup_2() { return cGroup_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2_0() { return cINTTerminalRuleCall_2_0; }
		
		//'.'
		public Keyword getFullStopKeyword_2_1() { return cFullStopKeyword_2_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2_2() { return cINTTerminalRuleCall_2_2; }
	}
	
	public class AttributeTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "event.driven.SceneDl.AttributeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cRangeEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cRangeRangeKeyword_0_0 = (Keyword)cRangeEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cValueEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cValueValueKeyword_1_0 = (Keyword)cValueEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum AttributeType:
		//    range | value
		//;
		public EnumRule getRule() { return rule; }
		
		//range | value
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//range
		public EnumLiteralDeclaration getRangeEnumLiteralDeclaration_0() { return cRangeEnumLiteralDeclaration_0; }
		
		public Keyword getRangeRangeKeyword_0_0() { return cRangeRangeKeyword_0_0; }
		
		//value
		public EnumLiteralDeclaration getValueEnumLiteralDeclaration_1() { return cValueEnumLiteralDeclaration_1; }
		
		public Keyword getValueValueKeyword_1_0() { return cValueValueKeyword_1_0; }
	}
	
	private final SceneElements pScene;
	private final ElementElements pElement;
	private final StaticEntityElements pStaticEntity;
	private final DynamicEntityElements pDynamicEntity;
	private final AttributeElements pAttribute;
	private final RegularAttributeElements pRegularAttribute;
	private final PositionAttributeElements pPositionAttribute;
	private final AttributeTypeElements eAttributeType;
	private final AttributeValueElements pAttributeValue;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SceneDlGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pScene = new SceneElements();
		this.pElement = new ElementElements();
		this.pStaticEntity = new StaticEntityElements();
		this.pDynamicEntity = new DynamicEntityElements();
		this.pAttribute = new AttributeElements();
		this.pRegularAttribute = new RegularAttributeElements();
		this.pPositionAttribute = new PositionAttributeElements();
		this.eAttributeType = new AttributeTypeElements();
		this.pAttributeValue = new AttributeValueElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("event.driven.SceneDl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Scene:
	//    name=ID
	//    (elements+=Element)*
	//;
	public SceneElements getSceneAccess() {
		return pScene;
	}
	
	public ParserRule getSceneRule() {
		return getSceneAccess().getRule();
	}
	
	//Element:
	//    StaticEntity | DynamicEntity
	//;
	public ElementElements getElementAccess() {
		return pElement;
	}
	
	public ParserRule getElementRule() {
		return getElementAccess().getRule();
	}
	
	//StaticEntity:
	//    type = 'static_entity' name=ID ('key' key=[Attribute])? ('isA' isA+=[Element])*
	//    ('{'
	//    (attributes+=Attribute | features+=[DynamicEntity] )
	//    (',' attributes+=Attribute | ',' features+=[DynamicEntity] )*
	//    '}')?
	//;
	public StaticEntityElements getStaticEntityAccess() {
		return pStaticEntity;
	}
	
	public ParserRule getStaticEntityRule() {
		return getStaticEntityAccess().getRule();
	}
	
	//DynamicEntity:
	//    type = 'dynamic_entity' name=ID ('key' key=[Attribute])? ('isA' isA+=[Element])*
	//    ('{'
	//    (attributes+=Attribute )
	//    (',' attributes+=Attribute)*
	//    '}')?
	//;
	public DynamicEntityElements getDynamicEntityAccess() {
		return pDynamicEntity;
	}
	
	public ParserRule getDynamicEntityRule() {
		return getDynamicEntityAccess().getRule();
	}
	
	//Attribute:
	//    RegularAttribute | PositionAttribute
	//;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//RegularAttribute:
	//    name=ID ':'  type = (AttributeType)  ('[')? (value += AttributeValue) ('-' value += AttributeValue)? (']')? (isTransient?='transient')?
	//;
	public RegularAttributeElements getRegularAttributeAccess() {
		return pRegularAttribute;
	}
	
	public ParserRule getRegularAttributeRule() {
		return getRegularAttributeAccess().getRule();
	}
	
	//PositionAttribute:
	//    name=ID ':'  type = (AttributeType) '['x = (INT) ';' y = (INT)']'  (isTransient?='transient')?
	//;
	public PositionAttributeElements getPositionAttributeAccess() {
		return pPositionAttribute;
	}
	
	public ParserRule getPositionAttributeRule() {
		return getPositionAttributeAccess().getRule();
	}
	
	//enum AttributeType:
	//    range | value
	//;
	public AttributeTypeElements getAttributeTypeAccess() {
		return eAttributeType;
	}
	
	public EnumRule getAttributeTypeRule() {
		return getAttributeTypeAccess().getRule();
	}
	
	//AttributeValue:
	//    INT | STRING | INT'.'INT
	//;
	public AttributeValueElements getAttributeValueAccess() {
		return pAttributeValue;
	}
	
	public ParserRule getAttributeValueRule() {
		return getAttributeValueAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
